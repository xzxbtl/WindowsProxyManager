import ctypes
import subprocess
import sys
import winreg


def add_proxy_to_windows_credentials(host: str, port: int,
                                     username: str, password: str) -> bool:
    try:
        subprocess.run([
            "cmdkey",
            f"/add:{host}:{port}",
            f"/user:{username}",
            f"/pass:{password}",
        ], check=True, capture_output=True)

        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã —É—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è {str(f"{host}:{port}")}")
        return True

    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —É—á—ë—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e.stderr.decode(errors='ignore')}")
        return False


def remove_proxy_from_windows_credentials(host: str, port: int) -> bool:
    try:
        subprocess.run(["cmdkey", f"/delete:{str(f"{host}:{port}")}"], check=True, capture_output=True)
        print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω—ã —É—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è {str(f"{host}:{port}")}")
        return True

    except subprocess.CalledProcessError as e:
        if b"not found" in e.stderr:
            print(f"‚ÑπÔ∏è –£—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è {str(f"{host}:{port}")} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —É—á—ë—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e.stderr.decode(errors='ignore')}")
        return False


def set_system_proxy(host: str, port: int, proxy_type: str = "all"):
    proxy_type = proxy_type.lower()

    if proxy_type not in ["http", "https", "all"]:
        print(f"‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –ø—Ä–æ–∫—Å–∏: {proxy_type}")
        return

    if proxy_type == "all":
        winhttp_proxy = f"http={host}:{port};https={host}:{port}"
    elif proxy_type == "http":
        winhttp_proxy = f"http={host}:{port}"
    else:
        winhttp_proxy = f"https={host}:{port}"

    if proxy_type == "all":
        wininet_proxy = f"{host}:{port}"
    elif proxy_type == "http":
        wininet_proxy = f"{host}:{port}"
    else:
        wininet_proxy = f"{host}:{port}"

    # --- WinHTTP ---
    try:
        subprocess.run(["netsh", "winhttp", "reset", "proxy"], check=True)
        subprocess.run(["netsh", "winhttp", "set", "proxy", winhttp_proxy], check=True)
        print(f"‚úÖ WinHTTP –ø—Ä–æ–∫—Å–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {winhttp_proxy}")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ WinHTTP –ø—Ä–æ–∫—Å–∏: {e}")

    # --- WinINET / –±—Ä–∞—É–∑–µ—Ä—ã ---
    try:
        reg_path = r"Software\Microsoft\Windows\CurrentVersion\Internet Settings"
        key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, reg_path, 0, winreg.KEY_SET_VALUE)
        winreg.SetValueEx(key, "ProxyEnable", 0, winreg.REG_DWORD, 1)
        winreg.SetValueEx(key, "ProxyServer", 0, winreg.REG_SZ, wininet_proxy)
        winreg.CloseKey(key)
        print(f"‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–∫—Å–∏ –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {wininet_proxy}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ–∫—Å–∏ –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–æ–≤: {e}")



def reset_system_proxy():
    # --- 1Ô∏è‚É£ WinHTTP ---
    try:
        subprocess.run(["netsh", "winhttp", "reset", "proxy"], check=True)
        print("‚úÖ WinHTTP –ø—Ä–æ–∫—Å–∏ —Å–±—Ä–æ—à–µ–Ω")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ WinHTTP –ø—Ä–æ–∫—Å–∏: {e}")

    # --- 2Ô∏è‚É£ WinINET / –±—Ä–∞—É–∑–µ—Ä—ã ---
    try:
        reg_path = r"Software\Microsoft\Windows\CurrentVersion\Internet Settings"
        key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, reg_path, 0, winreg.KEY_SET_VALUE)
        winreg.SetValueEx(key, "ProxyEnable", 0, winreg.REG_DWORD, 0)  # –æ—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–∫—Å–∏
        winreg.SetValueEx(key, "ProxyServer", 0, winreg.REG_SZ, "")     # –æ—á–∏—â–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        winreg.CloseKey(key)
        print("‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–∫—Å–∏ –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–æ–≤ —Å–±—Ä–æ—à–µ–Ω")
    except PermissionError:
        print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–µ—Å—Ç—Ä–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –ø—Ä–æ–∫—Å–∏ –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–æ–≤: {e}")


def is_admin():
    try:
        return ctypes.windll.shell32.IsUserAnAdmin() != 0
    except:
        return False


def run_as_admin():
    script = sys.argv[0]
    params = " ".join([f'"{arg}"' for arg in sys.argv[1:]])
    ctypes.windll.shell32.ShellExecuteW(
        None, "runas", sys.executable, f'"{script}" {params}', None, 1
    )
    sys.exit(0)
